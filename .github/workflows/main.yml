name: Deploy to EC2 Servers

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Backend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest ./CI-Backend
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest

      - name: Build and push Frontend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest ./CI-Frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

      - name: Configure SSH for Backend
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.BACKEND_SERVER_IP }} >> ~/.ssh/known_hosts
        shell: bash

      - name: Setup SSH agent for Backend
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.BACKEND_SSH_PRIVATE_KEY }}

      - name: Deploy to Backend EC2
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.BACKEND_SERVER_IP }} << 'EOF'
            docker pull ${{ secrets.DOCKER_USERNAME }}/backend:latest
            docker stop backend || true
            docker rm backend || true
            docker run -d -p 4000:4000 --name backend ${{ secrets.DOCKER_USERNAME }}/backend:latest
          EOF
        shell: bash

      - name: Configure SSH for Frontend
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.FRONTEND_SERVER_IP }} >> ~/.ssh/known_hosts
        shell: bash

      - name: Setup SSH agent for Frontend
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.FRONTEND_SSH_PRIVATE_KEY }}

      - name: Deploy to Frontend EC2
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.FRONTEND_SERVER_IP }} << 'EOF'
            docker pull ${{ secrets.DOCKER_USERNAME }}/frontend:latest
            docker stop frontend || true
            docker rm frontend || true
            docker run -d -p 3000:3000 --name frontend ${{ secrets.DOCKER_USERNAME }}/frontend:latest
            sudo systemctl reload nginx
          EOF
        shell: bash
